# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.beer_order_line import BeerOrderLine  # noqa: F401,E501
from swagger_server import util


class BeerOrder(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, customer_id: str=None, customer_ref: str=None, beer_order_lines: List[BeerOrderLine]=None, order_status_callback_url: str=None):  # noqa: E501
        """BeerOrder - a model defined in Swagger

        :param id: The id of this BeerOrder.  # noqa: E501
        :type id: str
        :param customer_id: The customer_id of this BeerOrder.  # noqa: E501
        :type customer_id: str
        :param customer_ref: The customer_ref of this BeerOrder.  # noqa: E501
        :type customer_ref: str
        :param beer_order_lines: The beer_order_lines of this BeerOrder.  # noqa: E501
        :type beer_order_lines: List[BeerOrderLine]
        :param order_status_callback_url: The order_status_callback_url of this BeerOrder.  # noqa: E501
        :type order_status_callback_url: str
        """
        self.swagger_types = {
            'id': str,
            'customer_id': str,
            'customer_ref': str,
            'beer_order_lines': List[BeerOrderLine],
            'order_status_callback_url': str
        }

        self.attribute_map = {
            'id': 'id',
            'customer_id': 'customerId',
            'customer_ref': 'customerRef',
            'beer_order_lines': 'beerOrderLines',
            'order_status_callback_url': 'orderStatusCallbackUrl'
        }
        self._id = id
        self._customer_id = customer_id
        self._customer_ref = customer_ref
        self._beer_order_lines = beer_order_lines
        self._order_status_callback_url = order_status_callback_url

    @classmethod
    def from_dict(cls, dikt) -> 'BeerOrder':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BeerOrder of this BeerOrder.  # noqa: E501
        :rtype: BeerOrder
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this BeerOrder.


        :return: The id of this BeerOrder.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this BeerOrder.


        :param id: The id of this BeerOrder.
        :type id: str
        """

        self._id = id

    @property
    def customer_id(self) -> str:
        """Gets the customer_id of this BeerOrder.


        :return: The customer_id of this BeerOrder.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id: str):
        """Sets the customer_id of this BeerOrder.


        :param customer_id: The customer_id of this BeerOrder.
        :type customer_id: str
        """
        if customer_id is None:
            raise ValueError("Invalid value for `customer_id`, must not be `None`")  # noqa: E501

        self._customer_id = customer_id

    @property
    def customer_ref(self) -> str:
        """Gets the customer_ref of this BeerOrder.


        :return: The customer_ref of this BeerOrder.
        :rtype: str
        """
        return self._customer_ref

    @customer_ref.setter
    def customer_ref(self, customer_ref: str):
        """Sets the customer_ref of this BeerOrder.


        :param customer_ref: The customer_ref of this BeerOrder.
        :type customer_ref: str
        """

        self._customer_ref = customer_ref

    @property
    def beer_order_lines(self) -> List[BeerOrderLine]:
        """Gets the beer_order_lines of this BeerOrder.


        :return: The beer_order_lines of this BeerOrder.
        :rtype: List[BeerOrderLine]
        """
        return self._beer_order_lines

    @beer_order_lines.setter
    def beer_order_lines(self, beer_order_lines: List[BeerOrderLine]):
        """Sets the beer_order_lines of this BeerOrder.


        :param beer_order_lines: The beer_order_lines of this BeerOrder.
        :type beer_order_lines: List[BeerOrderLine]
        """

        self._beer_order_lines = beer_order_lines

    @property
    def order_status_callback_url(self) -> str:
        """Gets the order_status_callback_url of this BeerOrder.


        :return: The order_status_callback_url of this BeerOrder.
        :rtype: str
        """
        return self._order_status_callback_url

    @order_status_callback_url.setter
    def order_status_callback_url(self, order_status_callback_url: str):
        """Sets the order_status_callback_url of this BeerOrder.


        :param order_status_callback_url: The order_status_callback_url of this BeerOrder.
        :type order_status_callback_url: str
        """

        self._order_status_callback_url = order_status_callback_url
